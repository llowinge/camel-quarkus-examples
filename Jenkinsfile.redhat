/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
def MAVEN_PARAMS = '-B -e -s $MAVEN_SETTINGS -Djava.net.preferIPv4Stack=true'

pipeline {

    agent none

    tools {
        jdk 'java-17'
    }

    environment {
        MAVEN_OPTS = '-Xmx3g'
        TESTCONTAINERS_RYUK_DISABLED = 'true'
    }

    options {
        buildDiscarder(
            logRotator(artifactNumToKeepStr: '5', numToKeepStr: '10')
        )
    }

    stages {
        stage('Build & test') {
            agent {
                label "rhel||pipeline||pipeline-large"
            }
            steps {
                script {
                    sh "docker system prune -f"

                    configFileProvider([configFile(fileId: 'fuse-maven-settings', variable: 'MAVEN_SETTINGS')]) {
                        sh "./mvnw-for-each.sh ${MAVEN_PARAMS} clean verify"
                        
                        //Fail if there are uncommitted changes after building
                        sh "[[ -z \$(git status --porcelain) ]] || { echo 'There are uncommitted changes'; git diff; git status; exit 1; }"
                    }
                }
            }
            post {
                always {
                    junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
                    junit allowEmptyResults: true, testResults: '**/target/failsafe-reports/*.xml'
                }
            }
        }
    }
}
